package org.gwaspi.model;

/**
 *
 * @author Fernando Mu√±iz Fernandez
 * IBE, Institute of Evolutionary Biology (UPF-CSIC)
 * CEXS-UPF-PRBB
 */
import org.gwaspi.database.DbManager;
import org.gwaspi.global.ServiceLocator;
import java.io.IOException;
import java.util.List;
import java.util.Map;

public class Report {

	private int reportId = Integer.MIN_VALUE; // INTEGER generated by default as identity
	private String rpFriendlyName = ""; // VARCHAR(255) NOT NULL
	private String rpFileName = ""; // VARCHAR(255) NOT NULL
	private String rpType = ""; // VARCHAR(32) NOT NULL
	private int parentMatrixId = Integer.MIN_VALUE; // INTEGER
	private int parentOpId = Integer.MIN_VALUE; // INTEGER
	private String description = ""; // VARCHAR(255)
	private int studyId = Integer.MIN_VALUE; // INTEGER

	/**
	 * This will init the Matrix object requested from the DB
	 */
	public Report(int _reportId) throws IOException {
		List<Map<String, Object>> rs = getReportMetadata(_reportId);
		reportId = _reportId;

		// PREVENT PHANTOM-DB READS EXCEPTIONS
		if (!rs.isEmpty() && rs.get(0).size() == org.gwaspi.constants.cDBReports.T_CREATE_REPORTS.length) {
			rpFriendlyName = (rs.get(0).get(org.gwaspi.constants.cDBReports.f_RP_NAME) != null) ? rs.get(0).get(org.gwaspi.constants.cDBReports.f_RP_NAME).toString() : "";
			rpFileName = (rs.get(0).get(org.gwaspi.constants.cDBReports.f_RP_FILE_NAME) != null) ? rs.get(0).get(org.gwaspi.constants.cDBReports.f_RP_FILE_NAME).toString() : "";
			rpType = (rs.get(0).get(org.gwaspi.constants.cDBReports.f_RP_TYPE) != null) ? rs.get(0).get(org.gwaspi.constants.cDBReports.f_RP_TYPE).toString() : "";
			parentMatrixId = (rs.get(0).get(org.gwaspi.constants.cDBReports.f_PARENT_MATRIXID) != null) ? Integer.parseInt(rs.get(0).get(org.gwaspi.constants.cDBReports.f_PARENT_MATRIXID).toString()) : -1;
			parentOpId = (rs.get(0).get(org.gwaspi.constants.cDBReports.f_PARENT_OPID) != null) ? Integer.parseInt(rs.get(0).get(org.gwaspi.constants.cDBReports.f_PARENT_OPID).toString()) : -1;
			description = (rs.get(0).get(org.gwaspi.constants.cDBReports.f_DESCRIPTION) != null) ? rs.get(0).get(org.gwaspi.constants.cDBReports.f_DESCRIPTION).toString() : "";
			studyId = (rs.get(0).get(org.gwaspi.constants.cDBReports.f_STUDYID) != null) ? Integer.parseInt(rs.get(0).get(org.gwaspi.constants.cDBReports.f_STUDYID).toString()) : 0;
		}
	}

	public int getReportId() {
		return reportId;
	}

	public int getParentMatrixId() {
		return parentMatrixId;
	}

	public int getStudyId() {
		return studyId;
	}

	public String getReportFriendlyName() {
		return rpFriendlyName;
	}

	public String getReportFileName() {
		return rpFileName;
	}

	public String getReportType() {
		return rpType;
	}

	public int getParentOperationId() {
		return parentOpId;
	}

	public String getDescription() {
		return description;
	}

	public static List<Map<String, Object>> getReportMetadata(int rpId) throws IOException {
		List<Map<String, Object>> rs = null;
		String dbName = org.gwaspi.constants.cDBGWASpi.DB_DATACENTER;
		DbManager studyDbManager = ServiceLocator.getDbManager(dbName);
		try {
			rs = studyDbManager.executeSelectStatement("SELECT * FROM " + org.gwaspi.constants.cDBGWASpi.SCH_MATRICES + "." + org.gwaspi.constants.cDBReports.T_REPORTS + " WHERE " + org.gwaspi.constants.cDBReports.f_ID + "=" + rpId + "  WITH RR");
		} catch (Exception e) {
			e.printStackTrace();
		}

		return rs;
	}
}
